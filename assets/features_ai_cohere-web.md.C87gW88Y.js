import{_ as o,D as n,c as l,l as e,a,I as t,a3 as i,o as r}from"./chunks/framework.BBWgT5cc.js";const P=JSON.parse('{"title":"Cohere Web","description":"","frontmatter":{},"headers":[],"relativePath":"features/ai/cohere-web.md","filePath":"features/ai/cohere-web.md","lastUpdated":1716719395000}'),h={name:"features/ai/cohere-web.md"},p={id:"cohere-web",tabindex:"-1"},c=e("a",{class:"header-anchor",href:"#cohere-web","aria-label":'Permalink to "Cohere Web <Badge type="tip" text="^0.5.0-beta.0" />"'},"​",-1),d=i('<p>Raycast Unblock offers Cohere Web AI support. You can use Cohere&#39;s models for free via their Web API.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>This is an inverted API. Please use with caution.</p><p>In the following, we found that Cohere Web also uses Cohere&#39;s official API, but with some special handling in transmission. It <em>still has the same Rate Limit issue</em> as the API.</p><p><strong>Therefore, we recommend that you use <a href="./cohere.html">Cohere&#39;s official API</a>.</strong></p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Due to the special nature of Cohere Web&#39;s transmission, this feature may face <em>many unstable situations</em>. Please use with caution.</p><p>We are not sure if the model configuration is effective in this scenario.</p></div><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><ol><li><p>Make sure you have an account on <a href="https://coral.cohere.com" target="_blank" rel="noreferrer">Cohere</a>. You can sign up for free.</p></li><li><p>Modify the configuration file with your Cohere account credentials (email and password).</p></li><li><p>Set the <code>[AI.Cohere].type</code> to <code>web</code>.</p></li></ol><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><p>The configuration for this feature includes the following parameters:</p>',7),u=e("li",null,[e("code",null,"type"),a(": The type of Cohere API to use. "),e("strong",null,[a("Set this to "),e("code",null,"web"),a(".")])],-1),m=e("li",null,[e("code",null,"email"),a(": Your email address for Cohere.")],-1),k=e("li",null,[e("code",null,"password"),a(": Your password for Cohere.")],-1),_=e("code",null,"temperature",-1),f=e("code",null,"max_tokens",-1),g=i(`<h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Cohere</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">type = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;web&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">email = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&lt;your email&gt;&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">password = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&lt;your password&gt;&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># temperature = 0.5</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># max_tokens = 100</span></span></code></pre></div>`,2);function b(y,E,C,w,A,T){const s=n("Badge");return r(),l("div",null,[e("h1",p,[a("Cohere Web "),t(s,{type:"tip",text:"^0.5.0-beta.0"}),a(),c]),d,e("ul",null,[u,m,k,e("li",null,[_,a(": The temperature of the model. "),t(s,{type:"info",text:"Optional"})]),e("li",null,[f,a(": The maximum tokens of the model. "),t(s,{type:"info",text:"Optional"})])]),g])}const I=o(h,[["render",b]]);export{P as __pageData,I as default};
