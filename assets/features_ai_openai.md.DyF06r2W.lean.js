import{_ as l,D as n,c as o,l as e,a as i,I as a,a3 as t,o as p}from"./chunks/framework.BBWgT5cc.js";const D=JSON.parse('{"title":"OpenAI","description":"","frontmatter":{},"headers":[],"relativePath":"features/ai/openai.md","filePath":"features/ai/openai.md","lastUpdated":1717193552000}'),d={name:"features/ai/openai.md"},h=t("",11),r=e("code",null,"temperature",-1),c=e("code",null,"max_tokens",-1),k=e("li",null,[e("code",null,"api_key"),i(": Your OpenAI API key.")],-1),u=e("code",null,"default",-1),E=e("code",null,"Models",-1),m=e("code",null,"Models.<model>",-1),g=e("code",null,"base_url",-1),y=e("code",null,"api_key",-1),_=e("code",null,"real_id",-1),f=e("code",null,"provider_name",-1),F=t("",7),b=e("code",null,"status",-1),C=e("code",null,"capabilities",-1),A=e("code",null,"image_generation",-1),T=e("code",null,"web_search",-1),I=t("",4);function x(v,B,w,O,P,q){const s=n("Badge");return p(),o("div",null,[h,e("ul",null,[e("li",null,[r,i(": The temperature of the model. "),a(s,{type:"info",text:"Optional"})]),e("li",null,[c,i(": The maximum tokens of the model. "),a(s,{type:"info",text:"Optional"})]),k,e("li",null,[u,i(": The default model to use. "),a(s,{type:"info",text:"Optional"})]),e("li",null,[E,i(": The custom models to use. "),a(s,{type:"info",text:"Optional"}),e("ul",null,[e("li",null,[m,i(": The model name. "),e("ul",null,[e("li",null,[g,i(": The base URL of the model. "),a(s,{type:"info",text:"Optional"}),i(),a(s,{type:"warning",text:"^v0.5.0-beta.2"})]),e("li",null,[y,i(": The API key of the model. "),a(s,{type:"info",text:"Optional"}),i(),a(s,{type:"warning",text:"^v0.5.0-beta.2"})]),e("li",null,[_,i(": The real id of the model. "),a(s,{type:"info",text:"Optional"}),i(),a(s,{type:"warning",text:"^v0.5.0-beta.2"})]),e("li",null,[f,i(": The provider name of the model. "),a(s,{type:"info",text:"Optional"}),i(),a(s,{type:"warning",text:"^v0.5.0-beta.2"})]),F,e("li",null,[b,i(": The status of the model. "),a(s,{type:"info",text:"Optional"})]),e("li",null,[C,i(": The capabilities of the model. "),a(s,{type:"info",text:"Optional"}),e("ul",null,[e("li",null,[A,i(": The image generation capability. "),a(s,{type:"info",text:"Optional"})]),e("li",null,[T,i(": The web search capability. "),a(s,{type:"info",text:"Optional"})])])])])])])])]),I])}const M=l(d,[["render",x]]);export{D as __pageData,M as default};
