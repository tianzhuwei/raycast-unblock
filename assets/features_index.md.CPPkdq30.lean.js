import{_ as n,D as i,c as l,l as e,a as t,I as a,a3 as o,o as c}from"./chunks/framework.BBWgT5cc.js";const N=JSON.parse('{"title":"General","description":"","frontmatter":{},"headers":[],"relativePath":"features/index.md","filePath":"features/index.md","lastUpdated":1715476864000}'),h={name:"features/index.md"},p=e("h1",{id:"general",tabindex:"-1"},[t("General "),e("a",{class:"header-anchor",href:"#general","aria-label":'Permalink to "General"'},"​")],-1),r=e("p",null,"Here are some system configurations, you can configure some system parameters here, such as the port to listen on, the address to listen on, logs, etc.",-1),d=e("h2",{id:"configuration",tabindex:"-1"},[t("Configuration "),e("a",{class:"header-anchor",href:"#configuration","aria-label":'Permalink to "Configuration"'},"​")],-1),u=e("p",null,"The configuration includes the following parameters:",-1),k=e("code",null,"mode",-1),f=e("code",null,"local",-1),_=e("code",null,"remote",-1),g=e("code",null,"remote",-1),y=e("code",null,"port",-1),m=e("code",null,"host",-1),x=e("code",null,"debug",-1),A=e("code",null,"logger",-1),D=e("code",null,"watch",-1),E=e("code",null,"Https",-1),b=e("code",null,"enabled",-1),T=e("code",null,"host",-1),v=e("code",null,"key",-1),O=e("code",null,"cert",-1),C=e("code",null,"ca",-1),q=o("",3);function w(P,H,I,B,S,F){const s=i("Badge");return c(),l("div",null,[p,r,d,u,e("ul",null,[e("li",null,[k,t(": The mode of the service. You can set it to "),f,t(" or "),_,t(". If you deploy this service on a remote server, it is recommended to set mode to "),g,t(". "),a(s,{type:"info",text:"Optional"})]),e("li",null,[y,t(": The port to listen on. "),a(s,{type:"info",text:"Optional"})]),e("li",null,[m,t(": The address to listen on. "),a(s,{type:"info",text:"Optional"})]),e("li",null,[x,t(": If there are some problems, you can set debug to true. "),a(s,{type:"info",text:"Optional"})]),e("li",null,[A,t(": If you want to use Fastify Logger, you can set logger to true. "),a(s,{type:"info",text:"Optional"})]),e("li",null,[D,t(": If you want the service to listen to the changes of the configuration file and update automatically, you can set watch to true. "),a(s,{type:"info",text:"Optional"})]),e("li",null,[E,t(": The configuration for HTTPS. "),a(s,{type:"info",text:"Optional"}),e("ul",null,[e("li",null,[b,t(": Enable HTTPS. "),a(s,{type:"info",text:"Optional"})]),e("li",null,[T,t(": The host to the certificate file (in auto generate mode). "),a(s,{type:"info",text:"Optional"})]),e("li",null,[v,t(": The path to the key file. "),a(s,{type:"info",text:"Optional"})]),e("li",null,[O,t(": The path to the certificate file. "),a(s,{type:"info",text:"Optional"})]),e("li",null,[C,t(": The path to the CA file. "),a(s,{type:"info",text:"Optional"})])])])]),q])}const V=n(h,[["render",w]]);export{N as __pageData,V as default};
